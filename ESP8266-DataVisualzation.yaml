
###### Device name ######
esphome:
  name: esp_device
  comment: an01_dg01_sc01_dh01                                                 # Meanings: AN=Analogic, DG=Digital, SC=Screen, DH=Digital Humity.
  friendly_name: data_visual

 ### Project info ###  
  project:
    name: "phantom.data"
    version: "1.0_betta"

###### Dev board and platform ######
esp8266:
  board: nodemcuv2
  framework:
    version: recommended


###### Data logger ######                                                        # Logger=Entrega de datos, por defecto entrega informacion parcial pero con la condicion de nivel VERBOSE no se limita la informacion
logger:
    level: VERBOSE
  
###### Home Assistant's Native API Config ######                                 # API de HomeAssitant, permite la conexion con ESPHome sin recurrir a MQTT pasando de 750ms/2000ms a <100ms, el cifrado pemite un viaje seguro en una red
api:
  encryption:
    key: !secret api_password
  
###### MQTT Broker Config ######                                                  # Protocolo IoT (Internet of things) y requiere un broker para almacenar y procesar los mensajes que envia y recibe cada dispositivo
mqtt:
  discovery: false
  broker: !secret mqtt_broker                                                     # Direcccion IP del broker MQTT
  port: !secret mqtt_brokerport                                                   # Puerto libre estandaizado (8083)para MQTT
#  keepalive: 5s                                                                  #//Opcion de descubrimiento, hace que envie un mesaje para permitir que algun sistema de domotica lo encuentre entre todo el contenido alojado en el broker, en este caso es comentado ya que se espera depender solo de ESP
  username: !secret mqtt_user                                                     
  password: !secret mqtt_password                                                 # Uso de contraseña en caso de recurrir al broker y no ESPHome y proteger los mensajes
  discovery_prefix: homeassistant                                                 
  
###### Over-the-Air Updates ######                                                # Son las actualizaciones enviadas a traves de la red, sin necesidad de recurrir a una conexion alambrica
ota:
  password: !secret ota_password                                                  
                                                                                  # Para proteger la placa contra actualizaciones no autorizadas se recurre a una contraseña



###### Network Config ######                                                      # Slots de red para operacion                               
wifi:
  networks:
    - ssid: !secret wifi_ssid                                                     # Nombre de red a la cual podria conectarse la placa de desarrollo
      bssid: !secret wifi_bssid                                                   # Dirección física del Punto de Acceso o Router al que se conecta la placa, para forzar la conexión a éste
      password: !secret wifi_password                                             # Contraseña de la red

    - ssid: !secret wifi_ssid2
      bssid: !secret wifi_bssid2
      password: !secret wifi_password2

    - ssid: !secret wifi_ssid3
      bssid: !secret wifi_bssid3
      password: !secret wifi_password3

      #### Static IP Address ####                                                 # Direcciones Estaticas (Requiere configuracion del dispositivo de red)
   # manual_ip:
   #   static_ip: 192.168.254.170
   #   gateway: 192.168.254.1
   #   subnet: 255.255.128.0
   #   dns1: 192.168.254.4
   #   dns2: 192.168.254.1

      #### Other settings ####
  #  fast_connect: on
  #  power_save_mode: none
  
###### Access Point and Captive Portal Config ######                               # Mecanimso de self-red en el que si no se puede conectar a une ared (funciona como modulo de red propio, para permitir configuracion local)
  ap:
    ssid: "esp_device"
    password: !secret ap_password

captive_portal:
  



###### 'Ports' Config ######
 ### Dallas temperature sensor pin ###
dallas:
 - pin: GPIO13                                             # D7, debe ser un numero (1-Wire is a bidirectional bus so it requires both input and output from the pin)
   update_interval: 60s

 ### SPI pin (for MAX6675) ###
spi:
  miso_pin: D6                                             # D6 es igual a GPIO16                       curiosly:  MOSI is not required
  clk_pin: D5                                              # D5 es igual a GIPO05


                                                   
####### Sensors #######                                     # Cada sensor  tiene una estructura especifica para poder ser incluida en ESPHome
sensor:
  ### Dallas Temperature Sensors DS18B20 ###                 
  - platform: dallas
    address: 0x373c01f095e27428                            # 0x1c0000031edd2a28 es el recomendado en la documentacion por ser general
    name: "Sensor DS18B20"
    id: sondatemperatura1                                  # Se usa solo cuando se desea usar multiples sensores similares


  ### MAX6675 K-type Thermocouple ###                        # SPI bus (Serial Periferical Inteface) 
  - platform: max6675                                                       
    name: "Sensor Thermocouple"
    cs_pin: GPIO15                                         # D8 es igual GPIO04
    update_interval: 60s
#    spi_id:                                               # Es una direccion ID manual del componente SPI en caso de tener multiples SPI buses


  ### DHT11 Temperature+Humidity Sensor ###
  - platform: dht
    pin: GPIO4                                             # D2 es igual a GPIO4
    temperature:
      name: "Sensor DHT11_Temperature"
    humidity: 
      name: "Sensor DHT11_Humidity"
    update_interval: 60s
    model: AUTO_DETECT
  

# Ultimos cambios: 28/03/2023